/* By default, the bot will look for a config file like this in the current user's home directory.
   Alternative config files can be specified by passing their location to the -c command line flag.
 */

{
	/* Server connection details */
	"server": {
    "host": "irc.example.com",
    "port": 6667,
    "ssl": false,
    "nickname": "ninjabot",
    "username": "ninjabot_un",
    "realname": "ninjabot_rn"
    /*"password": "server password"*/ /* Optional */
  },

  /* ninjabot settings */
  "bot": {
    "channels": [
      "##ninjabot_test"
    ],
    "command_prefix": "|",
    "notify_insufficient_privs": true,
    "notify_errors": true,
    "notify_cnf": true,
    "debug": false, /* When true, will print all socket IO to console */
    "quit_message": "Goodbye!"
  },

  /* Options for persistent storage.
     "path" -> path where data should be stored relative to the root directory containing ninjabot.py
     "alwayswrite" -> whether the storage api should write data to file everytime something new is added
     "writeinterval" -> time in seconds between writing changes to disk
     Note: leaving any option (or the whole section) out will result in default values
       - data stored in storage/
       - alwayswrite is false
       - interval is 300 (5 min)
   */
  "storage": {
      "path": "",
      "alwayswrite": false,
      "writeinterval": 0
  },

  /* Plugin whitelist, supports directory structure.
     "<plugin_name>": <boolean> will enable/disable that particular plugin.
     "<package_name>": {...} will add the package_name context to any contained rules
     "<package_name>": "*" will attempt to enable every plugin in the package

     For example, the following two rules are equivalent:
     "core.ctcp": true
     "core": {"ctcp": true}
     And to load everything from core,
     "core": "*"
   */
  "plugins": {
    "core": "*"
  },

  /* Plugin-specific settings. Uses same naming scheme as the "plugins"
     section above. Value will be passed to the plugin on initialisation
   */
  "core.auth": {
    "admins": [
      "admin1",
      "admin2"
    ],
    /* Specifies the NS command to use. Rizon uses 'status', freenode uses 'acc'.
       More will be added as I discover them. (They require different parameters)
     */
    "mode": "acc"
  },

  "core.ignore": {
    /* List of nicks to ignore by default */
    "ignorelist": [
      "ignore1",
      "ignore2"
    ]
  }
}
